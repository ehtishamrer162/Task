﻿@page "/Student"
@using TaskQuiz.Shared;
@inject HttpClient Http
@inject NavigationManager nvm

<h3>Here is Student Form</h3>

<EditForm Model="student" OnValidSubmit="@HandleOnSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>


    <label>
        Enter Student Id :
        <InputNumber  @bind-Value="student.Id" />
    </label>
    <br>
     <label>
        Enter Student Name :
        <InputText  @bind-Value="student.Name" />
    </label>
    <br>
    <label>
        Enter Roll Number:
        <InputText @bind-Value="student.RollNumber" />
    </label>
    <br>
     <label>
        Enter Student DOB :
        <InputDate @bind-Value="Student.StdMarks" />
    </label>
    <br>
    <button type="submit" >Submit</button>



</EditForm>

<p>@message</p>

<table>

    <thead>Id</thead>
    <thead>Name</thead>
    <thead>Roll</thead>


 @foreach(Student std  in Student )
{
    <tr>
        <td>@std.Id</td>
        <td>@std.Name</td>
        <td>@std.RollNumber</td>
    </tr>



}
</table>
<TaskQuiz.Components.StudentComp student="@Student" />



@code {

    Student student = new Student()
    {
        Marks=StdMarks.Now
    };


    List<Student> students = new List<Student>();
    string message = "";



    protected override async Task OnInitializedAsync()
    {

        students =  await Http.GetFromJsonAsync<List<Student>>("/50below");
       

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        students = await Http.GetFromJsonAsync<List<Student>>("/75below");

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        students = await Http.GetFromJsonAsync<List<Student>>("/75above");

    }




    
